C51 COMPILER V9.54   IR                                                                    04/20/2023 21:59:00 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE IR
OBJECT MODULE PLACED IN .\Objects\IR.obj
COMPILER INVOKED BY: D:\Keil5MDK\C51\BIN\C51.EXE IR.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\IR.ls
                    -t) OBJECT(.\Objects\IR.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "Timer0.h"
   3          #include "Int0.h"
   4          #include "LCD1602.h"
   5          
   6          unsigned int IR_Time;//计时
   7          unsigned char IR_State;
   8          
   9          unsigned char IR_Data[4];
  10          unsigned char IR_pData;
  11          
  12          unsigned char IR_DataFlag;
  13          unsigned char IR_RepeatFlag;
  14          unsigned char IR_Address;
  15          unsigned char IR_Command;
  16          
  17          void IR_Init(void)
  18          {
  19   1          Timer0_Init();
  20   1          Int0_Init();
  21   1      }
  22          
  23          unsigned char IR_GetDataFlag(void)
  24          {
  25   1          if(IR_DataFlag)
  26   1          {
  27   2              IR_DataFlag=0;
  28   2              return 1;
  29   2          }
  30   1          return 0;
  31   1      }
  32          
  33          unsigned char IR_GetRepeatFlag(void)
  34          {
  35   1          if(IR_RepeatFlag)
  36   1          {
  37   2              IR_RepeatFlag=0;
  38   2              return 1;
  39   2          }
  40   1          return 0;
  41   1      }
  42          
  43          unsigned char IR_GetAddress(void)
  44          {
  45   1          return IR_Address;
  46   1      }
  47          
  48          unsigned char IR_GetCommand(void)
  49          {
  50   1          return IR_Command;
  51   1      }
  52          
  53          void Int0_Routine(void) interrupt 0
  54          {
C51 COMPILER V9.54   IR                                                                    04/20/2023 21:59:00 PAGE 2   

  55   1              if(IR_State==0)
  56   1          {
  57   2              Timer0_SetCounter(0);
  58   2              Timer0_Run(1);
  59   2              IR_State=1;
  60   2          }
  61   1          else if(IR_State==1)
  62   1          {
  63   2              IR_Time=Timer0_GetCounter();
  64   2              Timer0_SetCounter(0);
  65   2              if(IR_Time>12441-500 && IR_Time<12441+500)
  66   2              {
  67   3                  IR_State=2;
  68   3              }
  69   2              else if(IR_Time>10368-500 && IR_Time<10368+500)
  70   2              {
  71   3                  IR_RepeatFlag=1;
  72   3                  Timer0_Run(0);
  73   3                  IR_State=0;
  74   3              }
  75   2              else
  76   2              {
  77   3                  IR_State=1;
  78   3              }
  79   2          }
  80   1          else if(IR_State==2)
  81   1          {
  82   2              IR_Time=Timer0_GetCounter();
  83   2              Timer0_SetCounter(0);
  84   2              LCD_ShowNum(2,3,IR_Time,7);
  85   2              //! There is a bug here, the IR_Time is not correct.
  86   2              if(IR_Time>=0 && IR_Time<100000)
  87   2              {
  88   3                  P2=1;
  89   3                  IR_Data[IR_pData/8]&=~(0x01<<IR_pData%8);
  90   3                  IR_pData++;
  91   3              }
  92   2              else if(IR_Time>=0 && IR_Time<100000)
  93   2              {
  94   3                  IR_Data[IR_pData/8]|=(0x01<<IR_pData%8);
  95   3                  IR_pData++;
  96   3              }
  97   2              else
  98   2              {
  99   3                  P2++;
 100   3                  IR_pData=0;
 101   3                  IR_State=1;
 102   3              }
 103   2              if(IR_pData==32)
 104   2              {
 105   3                  IR_pData=0;
 106   3                  if((IR_Data[0]==~IR_Data[1]) && (IR_Data[2]==~IR_Data[3]))
 107   3                  {
 108   4                      IR_Address=IR_Data[0];
 109   4                      IR_Command=IR_Data[2];
 110   4                      IR_DataFlag=1;
 111   4                  }
 112   3                  Timer0_Run(0);
 113   3                  IR_State=0;
 114   3              }
 115   2          }
 116   1      }
C51 COMPILER V9.54   IR                                                                    04/20/2023 21:59:00 PAGE 3   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    399    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
